rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Helper functions
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function isOwner(userId) {
      return request.auth.uid == userId;
    }
    
    function isAdmin() {
      return request.auth.token.admin == true;
    }
    
    // Property rules
    match /properties/{propertyId} {
      allow read: if isAuthenticated();
      allow create: if isAuthenticated() && isAdmin();
      allow update, delete: if isAuthenticated() && (isAdmin() || isOwner(resource.data.ownerId));
      
      // Unit rules
      match /units/{unitId} {
        allow read: if isAuthenticated();
        allow write: if isAuthenticated() && (isAdmin() || isOwner(get(/databases/$(database)/documents/properties/$(propertyId)).data.ownerId));
      }
    }
    
    // Task rules
    match /tasks/{taskId} {
      allow read: if isAuthenticated();
      allow create: if isAuthenticated();
      allow update: if isAuthenticated() && (isAdmin() || isOwner(resource.data.assignedTo));
      allow delete: if isAuthenticated() && isAdmin();
    }
    
    // Contact rules
    match /contacts/{contactId} {
      allow read: if isAuthenticated();
      allow create: if isAuthenticated() && isAdmin();
      allow update, delete: if isAuthenticated() && isAdmin();
    }
  }
}